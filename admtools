#!/usr/bin/env bash

test -z "$REDIS_PARAMETERS" && REDIS_PARAMETERS="-h redis-hipache.yourcompany.com"
test -z "$TIMEOUT_REQUEST" && TIMEOUT_REQUEST=5

function check-app() {
	shift
	app=$1
	path=$2
	test -z "$path" && path="$(get-healthcheck $app)"
	test -d "$TMP" && tempfile=$TMP/.tsurupluginadmtools-$RANDOM || tempfile=$HOME/.tsurupluginadmtools-$RANDOM

	IFS='
'
	for i in $(tsuru app-info -a $app|awk '$8 !~ /^$/ && $2 != "Unit" && $2 ~ /^([a-f0-9])+$/ {print $2,$4,$6":"$8}')
	do 
		echo unit: ${i}${path}
		(time curl --max-time $TIMEOUT_REQUEST --connect-timeout 1 $(echo $i|awk '{print $3}')${path} >/dev/null 2>&1\
			&&\
				echo status: OK\
			||\
				echo status: BAD
		) 2>&1|egrep "status|unit|real"
		echo
	done|tee $tempfile
	echo $(grep -c OK $tempfile) OK
	echo $(grep -c BAD $tempfile) BAD
	echo
	echo Top slow requests until $TIMEOUT_REQUEST seconds
	awk '/real/{print $2}' $tempfile|sort -n|tail -10
	echo
	test -f $tempfile; rm -f $tempfile
}

function check-app-router() {
	shift
	app=$1
	path=$2
	test -z "$path" && path="$(get-healthcheck $app)"
	test -d "$TMP" && tempfile=$TMP/.tsurupluginadmtools-$RANDOM || tempfile=$HOME/.tsurupluginadmtools-$RANDOM

	for i in $(echo "lrange frontend:$app 0 -1"|redis-cli $REDIS_PARAMETERS|awk -F/ '/http/{print $3}')
	do 
		echo unit: ${i}${path}
		(time curl --max-time $TIMEOUT_REQUEST --connect-timeout 1 ${i}${path} >/dev/null 2>&1\
			&&\
				echo status: OK\
			||\
				echo status: BAD
		) 2>&1|egrep "status|unit|real"
		echo
	done|tee $tempfile
	echo $(grep -c OK $tempfile) OK
	echo $(grep -c BAD $tempfile) BAD
	echo
	echo Top slow requests until $TIMEOUT_REQUEST seconds
	awk '/real/{print $2}' $tempfile|sort -n|tail -10
	echo
	test -f $tempfile; rm -f $tempfile
}

function get-healthcheck() {
	app=$1
	tsuru app-run 'grep -A1 ^healthcheck: {app,tsuru}.y?ml 2>/dev/null|awk "/path:/{print \$3; exit}"' -a $app -o
}

function node-list() {
	shift
	pool=$1
        test "$1"\
		&&\
			tsuru-admin docker-node-list |\
			tail -r|\
			sed -n /pool=$pool'[^a-z]*$/,/^..http/!d; /^..\(http[^ ]*\).*/!d; s//\1/; p'\
		||\
			tsuru-admin docker-pool-list|\
			awk '$2 !~ /^(Pools)$/ && $2 ~ /[a-z]/ {print $2}'
}

function node-exec() {
	shift
	test -z "$2" && cmd="$1"
 	test "$2" && pool="$1" && cmd="$2"
 
 	test -z "$pool"\
		&&\
			for i in $(
					tsuru-admin docker-node-list|\
						sed '/^..http:..\([^:]*\).*/!d; s//\1/'
				)
			do 
				echo Docker Node: $i
				ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $i "$cmd"
			done\
		||\
			for i in $(
					tsuru-admin docker-node-list|\
					tail -r|\
					sed -n	/pool=$pool'[^a-z]*$/,/^..http/!d
						/^..http:..\([^:]*\).*/!d
						s//\1/
						p'
				)
			do 
				echo Docker Node: $i
				ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $i "$cmd"
			done
}



function rpaas-per-minute() {
	shift
	case "$1" in
	   url)
	      rpaas-per-minute-url "$@"
	      ;;
	   bad-url)
	      rpaas-per-minute-bad-url "$@"
	      ;;
	   slow-url)
	      rpaas-per-minute-slow-url "$@"
	      ;;
	   *) 
	      rpaas-per-minute-status-code "$@"
	      ;;
	esac
}


function rpaas-per-minute-status-code() {
	test "$1" = "status-code" && shift 
	ip_rpaas="$1"
 	test $2 && date_log="$2" || date_log=$(date +%d/%b/%Y:%H:)
 	date_log=$(echo $date_log|sed 's,/,\\/,g')
	nginx_log=/var/log/nginx/access.log

	ssh $ip_rpaas 'sudo su -c "IFS=\"
\"; for i in \$(awk /\"'$date_log'/{print \\\$2}\" '$nginx_log'|sed \"s/^\(.*:\)[0-9][0-9]\(.*\)$/\1/g\"|uniq -c); do echo \$i;grep \$(echo \$i|awk \"{print \\\$2}\") '$nginx_log'|awk -F \"\\\t\" \"{print \\\$8}\"|sort|uniq -c|sort -n;done   "'
}

function rpaas-per-minute-url() {
	shift 
	ip_rpaas="$1"
 	test $2 && date_log="$2" || date_log=$(date +%d/%b/%Y:%H:)
 	date_log=$(echo $date_log|sed 's,/,\\/,g')
	nginx_log=/var/log/nginx/access.log

	ssh $ip_rpaas 'sudo su -c "IFS=\"
\"; for i in \$(awk /\"'$date_log'/{print \\\$2}\" '$nginx_log'|sed \"s/^\(.*:\)[0-9][0-9]\(.*\)$/\1/g\"|uniq -c); do echo \$i;grep \$(echo \$i|awk \"{print \\\$2}\") '$nginx_log'|awk -F \"\\\t\" \"{print \\\$2,\\\$3,\\\$4,\\\$8}\"|sort|uniq -c|sort -n|tail -n20;done   "'
}


function rpaas-per-minute-bad-url() {
	shift 
	ip_rpaas="$1"
 	test $2 && date_log="$2" || date_log=$(date +%d/%b/%Y:%H:)
 	date_log=$(echo $date_log|sed 's,/,\\/,g')
	nginx_log=/var/log/nginx/access.log

	ssh $ip_rpaas 'sudo su -c "IFS=\"
\"; for i in \$(awk /\"'$date_log'/{print \\\$2}\" '$nginx_log'|sed \"s/^\(.*:\)[0-9][0-9]\(.*\)$/\1/g\"|uniq -c); do echo \$i;grep \$(echo \$i|awk \"{print \\\$2}\") '$nginx_log'|awk -F \"\\\t\"  \"\\\$8 !~ /^[23]|404/ {print \\\$2,\\\$3,\\\$4,\\\$8}\"|sort|uniq -c|sort -n|tail -n20;done   "'
}

function rpaas-per-minute-slow-url() {
	shift 
	ip_rpaas="$1"
 	test $2 && date_log="$2" || date_log=$(date +%d/%b/%Y:%H:)
 	date_log=$(echo $date_log|sed 's,/,\\/,g')
	nginx_log=/var/log/nginx/access.log

	ssh $ip_rpaas 'sudo su -c "IFS=\"
\"; for i in \$(awk /\"'$date_log'/{print \\\$2}\" '$nginx_log'|sed \"s/^\(.*:\)[0-9][0-9]\(.*\)$/\1/g\"|uniq -c); do echo \$i;grep \$(echo \$i|awk \"{print \\\$2}\") '$nginx_log'|awk -F \"\\\t\" \"{print \\\$2,\\\$3,\\\$4,\\\$8,\\\$10}\"|sort -nk8|tail -n20;done   "'
}

RETVAL=0

case "$1" in
   ""|--help|-h) 
      echo "Usage: tsuru $(basename $0) [ -l|--node-list <pool> ] | [ -x|--node-exec <pool> 'cmd' ] | [ --check-app|-c appname <path> ] | [ --check-app-router|-r appname <path> ] | [ -m|--rpaas-per-minute <status-code>|url|bad-url|slow-url ip-rpaas <stringlog> ] | [ --help|-h ]"
      RETVAL=1
      ;;
   --node-list|-l)
      node-list "$@"
      ;;
   --check-app|-c)
      check-app "$@"
      ;;
   --check-app-router|-r)
      check-app-router "$@"
      ;;
   --node-exec|-x)
      node-exec "$@"
      ;;
   --rpaas-per-minute|-m)
      rpaas-per-minute "$@"
      ;;
esac

exit $RETVAL

